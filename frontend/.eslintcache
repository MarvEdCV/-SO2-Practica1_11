[{"D:\\Desktop\\frontend\\frontend\\src\\index.js":"1","D:\\Desktop\\frontend\\frontend\\src\\App.js":"2","D:\\Desktop\\frontend\\frontend\\src\\reportWebVitals.js":"3","D:\\Desktop\\frontend\\frontend\\src\\components\\Monitor\\Monitor.jsx":"4","D:\\Desktop\\frontend\\frontend\\src\\components\\Header\\Header.jsx":"5","D:\\Desktop\\frontend\\frontend\\src\\components\\Homepage\\Homepage.jsx":"6","D:\\Desktop\\frontend\\frontend\\src\\components\\RAM\\RAM.jsx":"7","D:\\Desktop\\frontend\\frontend\\src\\components\\CPU\\CPU.jsx":"8","D:\\Desktop\\frontend\\frontend\\src\\components\\AllProcess\\AllProcess.jsx":"9","D:\\Desktop\\frontend\\frontend\\src\\components\\Statistics\\Statistics.jsx":"10","D:\\Desktop\\frontend\\frontend\\src\\components\\Arbol\\Arbol.jsx":"11"},{"size":605,"mtime":1607842129368,"results":"12","hashOfConfig":"13"},{"size":528,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"13"},{"size":1055,"mtime":1607840655372,"results":"16","hashOfConfig":"13"},{"size":589,"mtime":1607840655352,"results":"17","hashOfConfig":"13"},{"size":2826,"mtime":1607840655368,"results":"18","hashOfConfig":"13"},{"size":4802,"mtime":1607840655390,"results":"19","hashOfConfig":"13"},{"size":3596,"mtime":1607840655347,"results":"20","hashOfConfig":"13"},{"size":1473,"mtime":1607840655326,"results":"21","hashOfConfig":"13"},{"size":3246,"mtime":1607840655404,"results":"22","hashOfConfig":"13"},{"size":1493,"mtime":1607840655332,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vnhb3b",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"28"},"D:\\Desktop\\frontend\\frontend\\src\\index.js",[],"D:\\Desktop\\frontend\\frontend\\src\\App.js",[],["51","52"],"D:\\Desktop\\frontend\\frontend\\src\\reportWebVitals.js",[],"D:\\Desktop\\frontend\\frontend\\src\\components\\Monitor\\Monitor.jsx",["53"],"import React from 'react';\nimport './Monitor.css';\nimport Header from '../Header/Header';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\";\nimport Homepage from '../Homepage/Homepage';\nimport CPU from '../CPU/CPU';\nimport RAM from '../RAM/RAM';\nexport default class Monitor extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        return (\n            <div>\n                <Header />\n\n                <Router>\n                    <Switch>\n                        <Route exact path=\"/CPU_Monitor\">\n                            <CPU URL={this.props.URL} />\n                        </Route>\n                        <Route exact path=\"/RAM_Monitor\">\n                            <RAM URL={this.props.URL} />\n                        </Route>\n                        <Route exact path=\"/\">\n                            <Homepage URL={this.props.URL} />\n                        </Route>\n                    </Switch>\n                </Router>\n            </div>\n        );\n    }\n}\n\n","D:\\Desktop\\frontend\\frontend\\src\\components\\Header\\Header.jsx",[],"D:\\Desktop\\frontend\\frontend\\src\\components\\Homepage\\Homepage.jsx",["54","55"],"import React from 'react';\nimport './Homepage.css';\nimport { Container, Row, Col, Tab, Nav } from 'react-bootstrap';\nimport Statistics from '../Statistics/Statistics';\nimport AllProcess from '../AllProcess/AllProcess';\nimport Arbol from '../Arbol/Arbol';\nimport axios from 'axios';\nexport default class Homepage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { Procesos: [], Arbol: [] };\n  }\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      axios.get(this.props.URL + `/leercpu`)\n        .then(res => {\n          //console.log(res.data.procesos)\n          this.setState({ Procesos: res.data.procesos });\n\n          let arbol = res.data.arbol;\n          arbol.map((proc) => {\n            proc = this.NoCapitalLetter(proc)\n            return null;\n          })\n          //console.log(arbol)\n          this.setState({ Arbol: arbol });\n        })\n    }, 2000)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n\n\n  NoCapitalLetter(proc) {\n    let obj = proc;\n    obj.id = parseInt(obj.id);\n    obj.label = \"(\" + obj.id + \") \" + obj.label;\n    obj.parentId = parseInt(obj.parentId);\n    obj.items = obj.items;\n\n\n    if (obj.parentId === 0) {\n      obj.parentId = null\n    } else if (obj.parentId === \"null\") {\n      obj.parentId = null\n    }\n\n    if (obj.id == 899) {\n      console.log(obj)\n    }\n    obj.items.map((hijo) => {\n      hijo = this.NoCapitalLetter(hijo)\n      return true;\n    });\n\n\n    return obj\n  }\n\n  render() {\n    return (\n      <Container fluid>\n        <Statistics Procesos={this.state.Procesos} URL={this.props.URL} />\n        <Row>\n          <Col md={12}>\n            <Tab.Container id=\"Selector-Tabs\" defaultActiveKey=\"first\" >\n              <Row>\n                <Col md={3}>\n                  <Nav variant=\"pills\" className=\"flex-column \" >\n                    <Nav.Item className=\"pb-2\">\n                      <Nav.Link eventKey=\"first\" className=\"btn btn-outline-dark\">Todos los Procesos</Nav.Link>\n                    </Nav.Item>\n\n                    <Nav.Item >\n                      <Nav.Link eventKey=\"second\" className=\"btn btn-outline-dark\">Arbol de procesos</Nav.Link>\n                    </Nav.Item>\n                  </Nav>\n                </Col>\n                <Col md={9}>\n                  <Tab.Content>\n                    <Tab.Pane eventKey=\"first\">\n                      <AllProcess Procesos={this.state.Procesos} URL={this.props.URL} />\n                    </Tab.Pane>\n                    <Tab.Pane eventKey=\"second\">\n                      <Arbol Arbol={this.state.Arbol} URL={this.props.URL} />\n                    </Tab.Pane>\n                  </Tab.Content>\n                </Col>\n              </Row>\n            </Tab.Container>\n          </Col>\n\n        </Row >\n\n\n\n\n\n      </Container >\n    );\n  }\n}\n\n","D:\\Desktop\\frontend\\frontend\\src\\components\\RAM\\RAM.jsx",[],"D:\\Desktop\\frontend\\frontend\\src\\components\\CPU\\CPU.jsx",[],"D:\\Desktop\\frontend\\frontend\\src\\components\\AllProcess\\AllProcess.jsx",[],"D:\\Desktop\\frontend\\frontend\\src\\components\\Statistics\\Statistics.jsx",["56","57","58","59"],"import React from 'react';\nimport './Statistics.css';\nimport { Container, Row, Col, Tab, Nav, Badge } from 'react-bootstrap';\nimport axios from 'axios';\nexport default class Statistics extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { Total: 0, Running: 0, Suspend: 0, Stop: 0, Zombie: 0 };\n    /*axios.get(this.props.URL + `/statistics`)\n      .then(res => {\n        this.setState({ Total: res.data.Total, Running: res.data.Running, Suspend: res.data.Suspend, Stop: res.data.Stop, Zombie: res.data.Zombie });\n      })*/\n\n  }\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      /*axios.get(this.props.URL + `/statistics`)\n        .then(res => {\n          this.setState({ Total: res.data.Total, Running: res.data.Running, Suspend: res.data.Suspend, Stop: res.data.Stop, Zombie: res.data.Zombie });\n        })*/\n\n      let running = this.props.Procesos.filter((proces) => proces.Estado === 0).length;\n      let stop = this.props.Procesos.filter((proces) => proces.Estado > 0 && proces !== 1026).length;\n      let zombie = this.props.Procesos.filter((proces) => proces.Estado < 0).length;\n      let suspend = this.props.Procesos.filter((proces) => proces.Estado === 1026).length;\n      this.setState({\n        Total: this.props.Procesos.length,\n        Running: running,\n        Stop: stop,\n        Suspend: suspend,\n        Zombie: zombie\n      });\n    }, 1000)\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    return (\n      <div>\n        <Row>\n          <Col md={5}>\n          </Col>\n          <Col>\n            <h1>\n              Procesos\n            </h1>\n          </Col>\n        </Row>\n        <Row>\n          <Col md={4}>\n          </Col>\n          <Col>\n            <h4>\n              Total de Procesos\n            </h4>\n          </Col>\n          <Col>\n            <h4>\n              <Badge variant=\"secondary\">{this.state.Total}</Badge>\n            </h4>\n\n          </Col>\n        </Row>\n        <Row>\n          <Col md={4}>\n          </Col>\n          <Col>\n            <h4>\n              Procesos en Ejecucion\n            </h4>\n          </Col>\n          <Col>\n            <h4>\n              <Badge variant=\"secondary\">{this.state.Running}</Badge>\n            </h4>\n          </Col>\n        </Row>\n        <Row>\n          <Col md={4}>\n          </Col>\n          <Col>\n            <h4>\n              Procesos Suspendidos\n            </h4>\n          </Col>\n          <Col>\n            <h4>\n              <Badge variant=\"secondary\">{this.state.Suspend}</Badge>\n            </h4>\n          </Col>\n        </Row>\n        <Row>\n          <Col md={4}>\n          </Col>\n          <Col>\n            <h4>\n              Procesos Detenidos\n            </h4>\n          </Col>\n          <Col>\n            <h4>\n              <Badge variant=\"secondary\">{this.state.Stop}</Badge>\n            </h4>\n          </Col>\n        </Row>\n        <Row>\n          <Col md={4}>\n          </Col>\n          <Col>\n            <h4>\n              Procesos Zombie\n            </h4>\n          </Col>\n          <Col>\n            <h4>\n              <Badge variant=\"secondary\">{this.state.Zombie}</Badge>\n            </h4>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\n","D:\\Desktop\\frontend\\frontend\\src\\components\\Arbol\\Arbol.jsx",["60"],"import React from 'react';\nimport './Arbol.css';\nimport axios from 'axios';\nimport Tree from '@naisutech/react-tree'\nexport default class Arbol extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { Procesos: [] };\n\n  }\n\n\n  /*\n    componentDidMount() {\n      this.interval = setInterval(() => {\n        axios.get(this.props.URL + `/leercpu`)\n          .then(res => {\n  \n            let arbol = res.data.arbol;\n  \n            console.log(arbol)\n            arbol.map((proc) => { })\n  \n            let data = [\n    {\n      \"id\": 1,\n      \"parentId\": null,\n      \"label\": \"My parent node\",\n      \"items\": [\n        {\n          \"id\": 87654321,\n          \"label\": \"My file\",\n          \"parentId\": 1,\n          \"items\": []\n        }\n      ]\n    },\n    {\n      \"id\": 56789012,\n      \"parentId\": 1,\n      \"label\": \"My child node\",\n      \"items\": []\n    }\n    , {\n      \"id\": 567890121,\n      \"parentId\": 1,\n      \"label\": \"My child node\",\n      \"items\": []\n    }\n  ];\n  //console.log(data)\n  this.setState({ Procesos: arbol });\n          })\n      }, 4000)\n    }\n  \n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }*/\n\n\n  render() {\n    return (\n\n      <div>\n        <Tree\n          nodes={this.props.Arbol} // see data format\n          //onSelect={(a) => { a }} // fired every click of node or leaf with selected item as argument\n          //        size={\"full\"} // full (default), half, narrow\n          id=\"tree\"\n        />\n      </div>\n    );\n  }\n}\n\n",{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":13,"column":5,"nodeType":"67","messageId":"68","endLine":15,"endColumn":6},{"ruleId":"69","severity":1,"message":"70","line":42,"column":17,"nodeType":"71","messageId":"72","endLine":42,"endColumn":26},{"ruleId":"73","severity":1,"message":"74","line":51,"column":16,"nodeType":"75","messageId":"76","endLine":51,"endColumn":18},{"ruleId":"77","severity":1,"message":"78","line":3,"column":10,"nodeType":"79","messageId":"80","endLine":3,"endColumn":19},{"ruleId":"77","severity":1,"message":"81","line":3,"column":31,"nodeType":"79","messageId":"80","endLine":3,"endColumn":34},{"ruleId":"77","severity":1,"message":"82","line":3,"column":36,"nodeType":"79","messageId":"80","endLine":3,"endColumn":39},{"ruleId":"77","severity":1,"message":"83","line":4,"column":8,"nodeType":"79","messageId":"80","endLine":4,"endColumn":13},{"ruleId":"77","severity":1,"message":"83","line":3,"column":8,"nodeType":"79","messageId":"80","endLine":3,"endColumn":13},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-self-assign","'obj.items' is assigned to itself.","MemberExpression","selfAssignment","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Tab' is defined but never used.","'Nav' is defined but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation"]